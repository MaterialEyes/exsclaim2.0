name: exsclaim2

services:
    python:
        build:
            target: "prod"
        image: exsclaim/core
        env_file: .env
        environment:
            - NTFY_LINK=${NTFY_LINK}
        networks:
            - backend
        volumes:
#            # This was added for when the exsclaim module was being edited while a container already existed.
#            # Can be removed if no work is being done to exsclaim since pip already locally installed it.
            - ./exsclaim:/usr/local/lib/python3.11/site-packages/exsclaim
            - ./query:/usr/src/app/query

    jupyter:
        build:
            target: "jupyter"
        image: exsclaim/jupyter
        env_file: .env
        environment:
            - HF_TOKEN=${HF_TOKEN}
            - NTFY_LINK=${NTFY_LINK}
        networks:
            - backend
        volumes:
            - ./exsclaim:/usr/local/lib/python3.11/site-packages/exsclaim
            - ./query:/usr/src/app/query
            - ./notebooks:/usr/src/app/notebooks
        ports:
            - "8888:8888"

    postgres:
        image: postgres:latest
        env_file:
            -   .env
        expose:
            - "$POSTGRES_PORT"
        networks:
            backend:
                aliases:
                    - db
                    - postgresql
        healthcheck:
            test: [ "CMD", "/usr/bin/pg_isready", "-d", "$POSTGRES_DB", "-U", "$POSTGRES_USER", "-p", "$POSTGRES_PORT" ]
            interval: 5s
            timeout: 60s
            retries: 12
            start_period: 10s

    api:
        restart: always
        env_file: .env
        environment:
            - DJANGO_SECRET_KEY=local
        image: exsclaim/ui/api
        build:
            context: ./api
            args:
                ENV: dev
                EXSCLAIM_GITHUB: MaterialEyes/exsclaim2.0
                EXSCLAIM_GIT_REVISION: exsclaim2_for_spin
            target: prod
        command: >
            bash -c "./manage.py migrate &&
                 ./manage.py runserver 0.0.0.0:8000"
        volumes:
            - ./api/apps:/code/apps
            - ./api/config:/code/config
            - ./api/docs:/code/docs
        ports:
            - "8000:8000"
        networks:
            - frontend
            - backend
        depends_on:
            postgres:
                condition: service_healthy

    dashboard:
        build: dashboard
        env_file: .env
        image: exsclaim/ui/dashboard
        environment:
            - POSTGRES_PORT="${POSTGRES_PORT-5078}"
        ports:
            - "3000:3000"
        networks:
            - frontend
            - backend
        volumes:
            - "./dashboard:/app"
        depends_on:
            api:
                condition: service_healthy

networks:
    frontend:
    backend:

volumes:
    exsclaim_module:
        driver: local
        driver_opts:
            type: bind
            device: /usr/src/app/exsclaim

    notebooks:
        driver: local
        driver_opts:
            type: bind
            device: /usr/src/app/notebooks

    query:
        driver: local
        driver_opts:
            type: bind
            device: /usr/src/app/query
